# .github/workflows/deploy.yml

name: Build and Deploy to GitHub Pages

on:
  push:
    branches:
      - main # Or whatever your primary branch is

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Required to deploy to GitHub Pages

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Step to create the firebaseConfig.js file using secrets
      - name: Create Firebase Config
        run: |
          # Create the directory if it doesn't exist (e.g., if you want to put it in a 'src' or 'js' folder)
          mkdir -p ./js # Assuming you'll put firebaseConfig.js in a 'js' folder

          # Write the firebaseConfig object to a new JS file
          echo "const firebaseConfig = {" > ./js/firebaseConfig.js
          echo "  apiKey: \"${{ secrets.FIREBASE_API_KEY }}\"," >> ./js/firebaseConfig.js
          echo "  authDomain: \"${{ secrets.FIREBASE_AUTH_DOMAIN }}\"," >> ./js/firebaseConfig.js
          echo "  projectId: \"${{ secrets.FIREBASE_PROJECT_ID }}\"," >> ./js/firebaseConfig.js
          echo "  storageBucket: \"${{ secrets.FIREBASE_STORAGE_BUCKET }}\"," >> ./js/firebaseConfig.js
          echo "  messagingSenderId: \"${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}\"," >> ./js/firebaseConfig.js
          echo "  appId: \"${{ secrets.FIREBASE_APP_ID }}\"," >> ./js/firebaseConfig.js
          echo "  measurementId: \"${{ secrets.FIREBASE_MEASUREMENT_ID }}\"" >> ./js/firebaseConfig.js
          echo "};" >> ./js/firebaseConfig.js
          # If you are using ES Modules, you might want to export it:
          # echo "export default firebaseConfig;" >> ./js/firebaseConfig.js
        env:
          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
          FIREBASE_MEASUREMENT_ID: ${{ secrets.FIREBASE_MEASUREMENT_ID }}

      # If you have a build process (e.g., using Node.js, npm, Vite, React, etc.)
      # You would typically run your build command here.
      # For a simple static site, the above step might be all you need for config.
      # Example for a Node.js build:
      # - name: Setup Node.js
      #   uses: actions/setup-node@v4
      #   with:
      #     node-version: '20'
      # - name: Install dependencies (if any)
      #   run: npm install # Or yarn install
      # - name: Build project (if any)
      #   run: npm run build # Or your build script
      #   env: # Pass secrets to the build process if your build tool uses env vars
      #     VITE_FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }} # Example for Vite
      #     # ... other vars

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./ # This should be the root of your site, or your build output folder (e.g., ./dist, ./build)
                           # Ensure that js/firebaseConfig.js is included in what's published.
